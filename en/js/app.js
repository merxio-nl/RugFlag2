
const TELEGRAM = "https://t.me/merxio_manager";
async function loadProducts(){ const res = await fetch('data/products.json', {cache:'no-store'}); return await res.json(); }
const euro = n => new Intl.NumberFormat('nl-NL',{style:'currency',currency:'EUR'}).format(n);
function makeCard(p){ const el=document.createElement('article'); el.className='card reveal'; const img=(p.images&&p.images[0])?p.images[0]:'images/hero.jpg'; el.innerHTML=`<img src="${img}" alt="${p.title}"><div class="body"><div class="title">${p.title}</div><div class="meta">${(p.materials||[]).join(' / ')}</div><div class="row"><span>${euro(p.price)}</span><a class="cta" href="product.html?id=${encodeURIComponent(p.id)}">View</a></div></div>`; return el; }
function applyReveals(){ const io=new IntersectionObserver((en)=>{en.forEach(e=>{if(e.isIntersecting){e.target.classList.add('in');io.unobserve(e.target);}})},{threshold:.15}); document.querySelectorAll('.reveal').forEach(el=>io.observe(el)); }
async function renderCatalog(){ const wrap=document.getElementById('catalog-grid'); if(!wrap) return; const items=await loadProducts(); const shapeSel=document.getElementById('f-shape'); const sizeSel=document.getElementById('f-size'); function pass(p){let ok=true; if(shapeSel&&shapeSel.value&&p.shape!==shapeSel.value) ok=false; if(sizeSel&&sizeSel.value&&p.size!==sizeSel.value) ok=false; return ok;} function draw(){ wrap.innerHTML=''; items.filter(pass).forEach(p=>wrap.appendChild(makeCard(p))); applyReveals(); } if(shapeSel) shapeSel.addEventListener('change',draw); if(sizeSel) sizeSel.addEventListener('change',draw); draw(); }
async function renderFeatured(){ const wrap=document.getElementById('featured-grid'); if(!wrap) return; const items=await loadProducts(); wrap.innerHTML=''; items.filter(p=>p.featured).slice(0,6).forEach(p=>wrap.appendChild(makeCard(p))); applyReveals(); }
async function renderProduct(){ const params=new URLSearchParams(location.search); const id=params.get('id'); if(!id) return; const items=await loadProducts(); const p=items.find(x=>x.id===id); if(!p) return; document.querySelector('[data-p-title]').textContent=p.title; document.querySelector('[data-p-meta]').textContent=`${(p.materials||[]).join(' / ')} · Handmade`; const sizeSel=document.getElementById('p-size'); const priceEl=document.querySelector('[data-p-price]'); const base=p.price; const sizeMap={'Ø120':1,'120×170':1.15,'140×200':1.35,'160×230':1.6}; function sync(){ const mul=sizeMap[sizeSel.value]||1; priceEl.textContent=euro(Math.round(base*mul)); } if(sizeSel){ ['Ø120','120×170','140×200','160×230'].forEach(s=>{const o=document.createElement('option'); o.value=s;o.textContent=s; if(p.size===s) o.selected=true; sizeSel.appendChild(o);}); sync(); sizeSel.addEventListener('change', sync); } const gal=document.getElementById('gallery'); gal.innerHTML=''; (p.images||[]).forEach(src=>{ const t=document.createElement('img'); t.src=src; t.alt=p.title; t.style.cursor='zoom-in'; t.addEventListener('click',()=>window.openLightbox(src)); gal.appendChild(t); }); document.querySelectorAll('[data-cta-telegram]').forEach(a=>{ const msg=encodeURIComponent(`Hello! I'd like to order: ${p.title} — size ${sizeSel.value||p.size}. Link: ${location.href}`); a.href=`${TELEGRAM}?text=${msg}`; }); }
document.addEventListener('DOMContentLoaded', ()=>{ document.querySelectorAll('[data-telegram]').forEach(a=> a.href=TELEGRAM); renderFeatured(); renderCatalog(); renderProduct(); applyReveals(); });
